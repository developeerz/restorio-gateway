http:
  routers:
    user-login:
      rule: "Path(`/api/user/login`) && (Method(`POST`) || Method(`OPTIONS`))"
      service: restorio-auth
      entryPoints:
        - web
      middlewares:
        - cors

    user-sign-up:
      rule: "Path(`/api/user/sign-up`) && (Method(`POST`) || Method(`OPTIONS`))"
      service: restorio-auth
      entryPoints:
        - web
      middlewares:
        - cors

    user-verify:
      rule: "Path(`/api/user/verify`) && Method(`POST`)"
      service: restorio-auth
      entryPoints:
        - web
      middlewares:
        - cors

    auth-refresh:
      rule: "Path(`/api/auth/refresh`) && Method(`GET`)"
      service: restorio-auth
      entryPoints:
        - web
      middlewares:
        - cors

    user-book-table:
      rule: "Path(`/api/restaurant/booking`) && Method(`POST`)"
      service: restaurant-service
      entryPoints:
        - web
      middlewares:
        - auth-middleware

  services:
    restorio-auth:
      loadBalancer:
        servers:
          - url: "http://restorio-auth:8081"
    
    restaurant-service:
      loadBalancer:
        servers:
          - url: "http://restaurant-service:8082"

  middlewares:
    auth-middleware:
      forwardAuth:
        address: "http://restorio-auth:8081/api/auth/check-acccess"
        trustForwardHeader: true
        authResponseHeaders:
          - X-Roles
          - X-User-Id

    cors:
      headers:
        accessControlAllowMethods:
          - GET
          - POST
          - OPTIONS
        accessControlAllowHeaders: "*"
        accessControlAllowOriginList:
          - http://localhost:3000
        accessControlMaxAge: 3600
        addVaryHeader: true
